{
  "name": "vscode-react-nextjs-generator",
  "displayName": "Just Another VSCode React Nextjs File Generator",
  "description": "A VSCode extension to effortlessly generate React and Next.js files with customizable templates and snippets.",
  "author": "Mike Rheault",
  "publisher": "mikerheault",
  "icon": "images/react-nextjs-generator-icon.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/mrheault/vscode-react-nextjs-generator"
  },
  "bugs": {
    "url": "https://github.com/mrheault/vscode-react-nextjs-generator/issues"
  },
  "homepage": "https://github.com/mrheault/vscode-react-nextjs-generator",
  "version": "1.0.2",
  "engines": {
    "vscode": "^1.102.3"
  },
  "categories": [
    "Programming Languages",
    "Snippets",
    "Other"
  ],
  "keywords": [
    "react",
    "next.js",
    "generator",
    "component",
    "page",
    "layout",
    "error",
    "loading",
    "typescript",
    "vscode",
    "extension",
    "template",
    "codegen",
    "scaffold",
    "snippets"
  ],
  "activationEvents": [],
  "main": "./dist/extension.js",
  "contributes": {
    "snippets": [
      {
        "language": "typescriptreact",
        "path": "./src/snippets/ts-react.json"
      },
      {
        "language": "typescriptreact",
        "path": "./src/snippets/ts-next.json"
      },
      {
        "language": "typescript",
        "path": "./src/snippets/ts-next.json"
      },
      {
        "language": "typescript",
        "path": "./src/snippets/ts-react.json"
      },
      {
        "language": "javascriptreact",
        "path": "./src/snippets/js-react.json"
      },
      {
        "language": "javascriptreact",
        "path": "./src/snippets/js-next.json"
      },
      {
        "language": "javascript",
        "path": "./src/snippets/js-next.json"
      },
      {
        "language": "javascript",
        "path": "./src/snippets/js-react.json"
      }
    ],
    "commands": [
      {
        "command": "extension.createClass",
        "title": "Create Class or Interface"
      },
      {
        "command": "extension.createReactComponent",
        "title": "Create React Component"
      },
      {
        "command": "extension.createNextJsPage",
        "title": "Create Next.js Page"
      },
      {
        "command": "extension.createNextJsLayout",
        "title": "Create Next.js Layout"
      },
      {
        "command": "extension.createNextJsError",
        "title": "Create Next.js Error"
      },
      {
        "command": "extension.createNextJsLoading",
        "title": "Create Next.js Loading"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "submenu": "react.createReactNext",
          "when": "explorerResourceIsFolder",
          "group": "React@1"
        }
      ],
      "react.createReactNext": [
        {
          "command": "extension.createClass",
          "when": "explorerResourceIsFolder",
          "group": "React@0"
        },
        {
          "command": "extension.createReactComponent",
          "when": "explorerResourceIsFolder",
          "group": "React@1"
        },
        {
          "command": "extension.createNextJsPage",
          "when": "explorerResourceIsFolder",
          "group": "React@2"
        },
        {
          "command": "extension.createNextJsLayout",
          "when": "explorerResourceIsFolder",
          "group": "React@3"
        },
        {
          "command": "extension.createNextJsError",
          "when": "explorerResourceIsFolder",
          "group": "React@4"
        },
        {
          "command": "extension.createNextJsLoading",
          "when": "explorerResourceIsFolder",
          "group": "React@5"
        }
      ]
    },
    "submenus": [
      {
        "id": "react.createReactNext",
        "label": "React/Next Generator"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "React/Next.js Generator",
      "properties": {
        "reactNextjsGenerator.templates.page": {
          "type": "string",
          "default": "import React from 'react';\n\nexport default async function Page({\n    params,\n    searchParams,\n}: {\n    params: { slug: string | string[] };\n    searchParams: { [key: string]: string | string[] | undefined };\n}) {\n    return (\n        <div>\n        <h1>Page</h1>\n        </div>\n  );\n};\n\nexport async function generateMetadata({\n    params,\n    searchParams,\n}: {\n    params: { slug: string | string[] };\n    searchParams: { [key: string]: string | string[] | undefined };\n}): Promise<Metadata | undefined> {\n    return {};\n}\n",
          "description": "Template for Next.js page component",
          "editPresentation": "multilineText"
        },
        "reactNextjsGenerator.templates.layout": {
          "type": "string",
          "default": "import React from 'react';\n\nexport default async function RootLayout({\n    children,\n}: {\n    children: React.ReactNode;\n}) {\n    return (\n        <div>\n        <header>Header</header>\n        <main>{children}</main>\n        <footer>Footer</footer>\n        </div>\n    );\n};\n",
          "description": "Template for Next.js layout component",
          "editPresentation": "multilineText"
        },
        "reactNextjsGenerator.templates.error": {
          "type": "string",
          "default": "import React from 'react';\n\nexport default function Error() {\n  return (\n    <div>\n      <h1>Error: Something went wrong</h1>\n    </div>\n  );\n};\n",
          "description": "Template for Next.js error component",
          "editPresentation": "multilineText"
        },
        "reactNextjsGenerator.templates.loading": {
          "type": "string",
          "default": "import React from 'react';\n\nexport default function Loading() {\n  return (\n    <div>\n      <h1>Loading...</h1>\n    </div>\n  );\n};\n",
          "description": "Template for Next.js loading component",
          "editPresentation": "multilineText"
        },
        "reactNextjsGenerator.templates.reactComponent": {
          "type": "string",
          "default": "import React from 'react';\nimport styles from './{fileName}.module.css';\n\nexport type {fileName}Props = {};\n\nexport const {fileName}: React.FC<{fileName}Props> = () => {\n  return (\n    <div className={styles.container}>\n      {fileName} Component\n    </div>\n  );\n};\n",
          "description": "Template for React component",
          "editPresentation": "multilineText"
        },
        "reactNextjsGenerator.templates.reactComponentCss": {
          "type": "string",
          "default": ".container {\n  /* Add your styles here */\n}\n",
          "description": "Template for React component CSS module",
          "editPresentation": "multilineText"
        },
        "reactNextjsGenerator.templates.reactComponentTest": {
          "type": "string",
          "default": "import React from 'react';\nimport { render } from '@testing-library/react';\nimport {fileName} from '../{fileName}';\n\ntest('renders {fileName} component', () => {\n  render(<{fileName} />);\n});\n",
          "description": "Template for React component test",
          "editPresentation": "multilineText"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "npm run check-types && npm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/vscode": "^1.93.0",
    "@types/mocha": "^10.0.7",
    "@types/node": "22.x",
    "@typescript-eslint/eslint-plugin": "^8.19.1",
    "@typescript-eslint/parser": "^8.19.1",
    "eslint": "^9.18.0",
    "esbuild": "^0.24.2",
    "npm-run-all": "^4.1.5",
    "typescript": "^5.7.3",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1"
  }
}
